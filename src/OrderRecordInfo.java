//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : OrderRecordInfo.java
//  @ Date : 2014-04-28
//  @ Author : 장성봉
//
//



import java.util.*;
public class OrderRecordInfo {
	private OrdererInfo orderInfo;			//주문자 정보
	private StoreInfo storeInfo;			//판매처 정보
	private String orderCode;				//주문 코드
	private RecipientInfo recipientInfo;	//수령인정보
	private Collection<OrderedItemInfo> orderedItemInfoList;//주문물품정보리스트
	public OrderRecordInfo() 
	{
		this(new OrdererInfo(),new StoreInfo(),"",new RecipientInfo(),new LinkedList<OrderedItemInfo>());
	}
	public OrderRecordInfo(OrdererInfo orderInfo, StoreInfo storeInfo, RecipientInfo recipientInfo, Collection<OrderedItemInfo> orderedItemInfoList) 
	{
		this(orderInfo, storeInfo, "", recipientInfo, orderedItemInfoList) ;
	}
	public OrderRecordInfo(OrdererInfo orderInfo, StoreInfo storeInfo, String orderCode, RecipientInfo recipientInfo, Collection<OrderedItemInfo> orderedItemInfoList) 
	{
		this.orderInfo = orderInfo;
		this.storeInfo = storeInfo;
		this.orderCode = orderCode;
		this.recipientInfo = recipientInfo;
		this.orderedItemInfoList = orderedItemInfoList;
	}
		
	public OrdererInfo getOrdererInfo() {
		return this.orderInfo;
	}
	
	public StoreInfo getStoreInfo() {
		return this.storeInfo;
	}
	
	public String getOrderCode() {
		return this.orderCode;
	}
	
	public RecipientInfo getRecipientInfo() {
		return this.recipientInfo;
	}
	
	public Collection<OrderedItemInfo> getOrderedItemInfoList() {
		return this.orderedItemInfoList;
	}
	
	public void setOrdererInfo(OrdererInfo orderInfo) {
		this.orderInfo = orderInfo;
	}
	
	public void setStoreInfo(StoreInfo storeInfo) {
		this.storeInfo = storeInfo;
	}
	
	public void setOrderCode(String orderCode) {
		this.orderCode= orderCode;
	}
	
	public void setRecipientInfo(RecipientInfo recipientInfo) {
		this.recipientInfo = recipientInfo;
	}
	
	public void setOrderedItemInfoList(Collection<OrderedItemInfo> list) {
		this.orderedItemInfoList = list;
	}
	
	public OrderedItemInfo addOrderedItemInfoList(OrderedItemInfo orderedItemInfo) {
		orderedItemInfoList.add(orderedItemInfo);
		return orderedItemInfo;
	}
	
	public OrderedItemInfo reviseOrderedItemInfoList(String orderCode, OrderedItemInfo orderedItemInfo) {
		int i=0;
		for(OrderedItemInfo orderedItem : orderedItemInfoList)
		{
			if(orderedItem.getItemCode().equals(orderCode))
			{
				try
				{
					((LinkedList<OrderedItemInfo>)orderedItemInfoList).set(i,orderedItemInfo);
					return orderedItem;
				}
				catch (IndexOutOfBoundsException e)
				{
					return null;
				}
			}
			i++;
		}
		return null;
	}
	
	public OrderedItemInfo removeOrderedItemInfoList(String orderCode) 
	{
		OrderedItemInfo orderedItem = searchOrderedItemInfo(orderCode);
		if(orderedItem !=null)
		{
			this.orderedItemInfoList.remove(orderedItem);
			return orderedItem;
		}
		return null;	
	}	
	public OrderedItemInfo searchOrderedItemInfo(String orderCode) 
	{
		for(OrderedItemInfo orderedItem : orderedItemInfoList)
		{
			if(orderedItem.getItemCode().equals(orderCode))
			{
				return orderedItem;
			}
		}
		return null;
	}
	public Collection<OrderedItemInfo> searchOrderedItemInfoList(String orderCode) 
	{
		LinkedList<OrderedItemInfo> list = new LinkedList<OrderedItemInfo>();
		for(OrderedItemInfo orderedItem : orderedItemInfoList)
		{
			if(orderedItem.getItemCode().equals(orderCode))
			{
				list.add(orderedItem);	
			}
		}
		return list;
	
	}
}
