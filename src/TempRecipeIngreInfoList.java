//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : TempRecipeIngreInfoList.java
//  @ Date : 2014-04-29
//  @ Author : 
//
//


import java.util.*;


public class TempRecipeIngreInfoList {
	public static String foodName;
	public static String foodCode;
	public static Collection<RecipeIngreInfo> recipeIngreInfoList;
	static
	{
		foodName= "";
		foodCode = "";
		recipeIngreInfoList = new LinkedList<RecipeIngreInfo>();
	}

	
	public static String getFoodName() {
	return foodName;
	}
	
	public static String getFoodCode() {
	return foodCode;
	}
	
	public static Collection<RecipeIngreInfo> getRecipeIngreInfoList() {
	return recipeIngreInfoList;
	}
	
	public static void setFoodName(String name) {
	foodName = name;
	}
	
	public static void setFoodCode(String code) {
	foodCode = code;
	}
	
	public static void setRecipeInfoList(Collection<RecipeIngreInfo> list) {
	recipeIngreInfoList =list;
	}
	
	public static RecipeIngreInfo addRecipeIngreInfoList(RecipeIngreInfo recipeIngreInfo) {
		recipeIngreInfoList.add(recipeIngreInfo);
		return recipeIngreInfo;
	}
	
	public static RecipeIngreInfo reviseRecipeIngreInfoList(String ingredientCode, RecipeIngreInfo recipeIngreInfo) {
	int i=0;
		for(RecipeIngreInfo ingred : recipeIngreInfoList)
		{
			if(ingred.getIngredientCode().equals(ingredientCode))
			{
				try
				{
					((LinkedList<RecipeIngreInfo>)recipeIngreInfoList).set(i,recipeIngreInfo);
					return ingred;
				}
				catch (IndexOutOfBoundsException e)
				{
					return null;
				}
			}
			i++;
		}
		return null;
	}
	
	public static RecipeIngreInfo removeRecipeIngreInfoList(String ingredientCode) {
	RecipeIngreInfo ingred = searchRecipeIngreInfo(ingredientCode);
		if(ingred !=null)
		{
			recipeIngreInfoList.remove(ingred);
			return ingred;
		}
		return null;
	}
	
	public static RecipeIngreInfo searchRecipeIngreInfo(String ingredientCode) {
	for(RecipeIngreInfo ingred : recipeIngreInfoList)
		{
			if(ingred.getIngredientCode().equals(ingredientCode))
			{
				return ingred;
			}
		}
		return null;
	}
	
	public static Collection<RecipeIngreInfo> searchRecipeIngreInfoList(String ingredientName) {
	LinkedList<RecipeIngreInfo> list = new LinkedList<RecipeIngreInfo>();
		for(RecipeIngreInfo ingred : recipeIngreInfoList)
		{
			if(ingred.getIngredientName().equals(ingredientName))
			{
				list.add(ingred);	
			}
		}
		return list;
	}
	
	public static RecipeIngreInfo searchRecipeIngreInfoName(String ingredientName) {
	for(RecipeIngreInfo ingred : recipeIngreInfoList)
		{
			if(ingred.getIngredientName().equals(ingredientName))
			{
				return ingred;
			}
		}
		return null;
	}
}
