//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : RecipeIngreInfoList.java
//  @ Date : 2014-04-28
//  @ Author : ¿Âº∫∫¿
//
//
import java.util.*;
public class RecipeIngreInfoList {
	private String foodName;
	private String foodCode;
	private Collection<RecipeIngreInfo> recipeIngreInfoList;
	public RecipeIngreInfoList() 
	{
		this("","",new LinkedList<RecipeIngreInfo>());
	}	
	public RecipeIngreInfoList(String foodName,Collection<RecipeIngreInfo> recipeIngreInfoList) 
	{
		this(foodName,"",recipeIngreInfoList);
	}
	public RecipeIngreInfoList(String foodName,String foodCode,Collection<RecipeIngreInfo> recipeIngreInfoList) 
	{
		this.foodName=foodName;
		this.foodCode=foodCode;
		this.recipeIngreInfoList = recipeIngreInfoList;
	}
	public String getFoodName()
	{
		return foodName;
	}
	public String getFoodCode()
	{
		return foodCode;
	}
	public Collection<RecipeIngreInfo> getRecipeIngreInfoList() 
	{
		return this.recipeIngreInfoList;
	}
	public void setFoodName(String foodName)
	{
		this.foodName=foodName;
	}
	public void setFoodCode(String foodCode)
	{
		this.foodCode=foodCode;
	}
	public void setRecipeInfoList(Collection<RecipeIngreInfo> recipeIngreInfoList) 
	{
		this.recipeIngreInfoList = recipeIngreInfoList;
	}
	
	public RecipeIngreInfo addRecipeIngreInfoList(RecipeIngreInfo recipeIngreInfo) 
	{
		this.recipeIngreInfoList.add(recipeIngreInfo);
		return recipeIngreInfo;
	}
	
	public RecipeIngreInfo reviseRecipeIngreInfoList(String ingredientCode,RecipeIngreInfo recipeIngreInfo) 
	{
		
		int i=0;
		for(RecipeIngreInfo ingred : recipeIngreInfoList)
		{
			if(ingred.getIngredientCode().equals(ingredientCode))
			{
				try
				{
					((LinkedList<RecipeIngreInfo>)recipeIngreInfoList).set(i,recipeIngreInfo);
					return ingred;
				}
				catch (IndexOutOfBoundsException e)
				{
					return null;
				}
			}
			i++;
		}
		return null;
	}
	
	public RecipeIngreInfo removeRecipeIngreInfoList(String ingredientCode) 
	{
		RecipeIngreInfo ingred = searchRecipeIngreInfo(ingredientCode);
		if(ingred !=null)
		{
			this.recipeIngreInfoList.remove(ingred);
			return ingred;
		}
		return null;
	}
	
	public RecipeIngreInfo searchRecipeIngreInfo(String ingredientCode) 
	{
		for(RecipeIngreInfo ingred : recipeIngreInfoList)
		{
			if(ingred.getIngredientCode().equals(ingredientCode))
			{
				return ingred;
			}
		}
		return null;
	
	}
	public Collection<RecipeIngreInfo> searchRecipeIngreInfoList(String ingredientName) 
	{
		LinkedList<RecipeIngreInfo> list = new LinkedList<RecipeIngreInfo>();
		for(RecipeIngreInfo ingred : recipeIngreInfoList)
		{
			if(ingred.getIngredientName().equals(ingredientName))
			{
				list.add(ingred);	
			}
		}
		return list;
	}
	public RecipeIngreInfo searchRecipeIngreName(String ingredientName)
	{
		for(RecipeIngreInfo ingred : recipeIngreInfoList)
		{
			if(ingred.getIngredientName().equals(ingredientName))
			{
				return ingred;
			}
		}
		return null;
	}
}
