//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : FoodCategoryDAO.java
//  @ Date : 2014-05-13
//  @ Author : 양진영
//
//

import java.sql.*;
import java.util.*;

public class FoodCategoryDAO {
	private Connection conn;
	public FoodCategoryDAO() {
		connect();
	}
	
	public Connection getConn() {
		return conn;
	}
	public void setConn(Connection conn) {
		this.conn=conn;
	}
	private void connect() {
		try
		{
			conn=DBConnectionPool.getInstance().getConnection();
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
	}
	public void disconnect() {
		try
		{
			if(conn!=null)
			{
				conn.close();
				System.out.println("DB와의 접속을 끊었습니다.");
			}
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
	}
	
	public int insert(int foodCategoryCode, int foodCode, int secondCategoryCode) {
		int rowNum=0;
		PreparedStatement pstmt=null;
		try
		{
			String sql="INSERT INTO foodCategory_tb VALUES(?,?,?)";
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,foodCategoryCode);
			pstmt.setInt(2,foodCode);
			pstmt.setInt(3,secondCategoryCode);
			rowNum=pstmt.executeUpdate();
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return rowNum;
	}
	
	public FoodCategoryList selectAll() {
		FoodCategoryList tmp=new FoodCategoryList();
		FoodCategoryDTO dto=null;
		PreparedStatement pstmt=null;
		try
		{
			String sql="SELECT * FROM foodCategory_tb";
			pstmt=conn.prepareStatement(sql);
			ResultSet rs=pstmt.executeQuery();
			while(rs.next())
			{
				dto=new FoodCategoryDTO(rs.getInt("foodCategoryCode"),rs.getInt("foodCode"),rs.getInt("secondCategoryCode"));
				tmp.addFoodCategoryList(dto);
			}
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return tmp;
	}
	
	public FoodCategoryDTO selectFoodCategoryCode(int foodCategoryCode) {
		FoodCategoryDTO dto=null;
		PreparedStatement pstmt=null;
		try
		{
			String sql="SELECT * FROM foodCategory_tb WHERE foodCategoryCode=?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,foodCategoryCode);
			ResultSet rs=pstmt.executeQuery();
			while(rs.next())
			{
				dto=new FoodCategoryDTO(rs.getInt("foodCategoryCode"),rs.getInt("foodCode"),rs.getInt("secondCategoryCode"));
			}
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return dto;
	}
	
	public FoodCategoryList selectFoodCode(int foodCode) {
		FoodCategoryList tmp=new FoodCategoryList();
		FoodCategoryDTO dto=null;
		PreparedStatement pstmt=null;
		try
		{
			String sql="SELECT * FROM foodCategory_tb WHERE foodCode=1";
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,foodCode);
			ResultSet rs=pstmt.executeQuery();
			while(rs.next())
			{
				dto=new FoodCategoryDTO(rs.getInt("foodCategoryCode"),rs.getInt("foodCode"),rs.getInt("secondCategoryCode"));
				tmp.addFoodCategoryList(dto);
			}
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return tmp;
	}
	
	public FoodCategoryList selectSecondCategoryCode(int secondCategoryCode) {
		FoodCategoryList tmp=new FoodCategoryList();
		FoodCategoryDTO dto=null;
		PreparedStatement pstmt=null;
		try
		{
			String sql="SELECT * FROM foodCategory_tb WHERE SecondCategoryCode=1";
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,secondCategoryCode);
			ResultSet rs=pstmt.executeQuery();
			while(rs.next())
			{
				dto=new FoodCategoryDTO(rs.getInt("foodCategoryCode"),rs.getInt("foodCode"),rs.getInt("secondCategoryCode"));
				tmp.addFoodCategoryList(dto);
			}
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return tmp;
	}
	
	public int updateAll(int foodCategoryCode, int foodCode, int secondCategoryCode) {
		int rowNum=0;
		PreparedStatement pstmt=null;
		try
		{
			String sql="UPDATE foodCategory_tb SET foodCode=?,secondCategoryCode=? WHERE foodCategoryCode=?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,foodCode);
			pstmt.setInt(2,secondCategoryCode);
			pstmt.setInt(3,foodCategoryCode);
			rowNum=pstmt.executeUpdate();
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return rowNum;
	}
	
	public int updateFoodCode(int foodCategoryCode, int foodCode) {
		int rowNum=0;
		PreparedStatement pstmt=null;
		try
		{
			String sql="UPDATE foodCategory_tb SET foodCode=? WHERE foodCategoryCode=?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,foodCode);
			pstmt.setInt(2,foodCategoryCode);
			rowNum=pstmt.executeUpdate();
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return rowNum;
	}
	
	public int updateSecondCategoryCode(int foodCategoryCode, int secondCategoryCode) {
		int rowNum=0;
		PreparedStatement pstmt=null;
		try
		{
			String sql="UPDATE foodCategory_tb SET secondCategoryCode=? WHERE foodCategoryCode=?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,secondCategoryCode);
			pstmt.setInt(2,foodCategoryCode);
			rowNum=pstmt.executeUpdate();
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return rowNum;
	}
	
	public int deleteAll() {
		int rowNum=0;
		PreparedStatement pstmt=null;
		try
		{
			String sql="DELETE FROM foodCategory_tb";
			pstmt=conn.prepareStatement(sql);
			rowNum=pstmt.executeUpdate();
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return rowNum;
	}
	
	public int deleteFoodCategoryCode(int foodCategoryCode) {
		int rowNum=0;
		PreparedStatement pstmt=null;
		try
		{
			String sql="DELETE FROM foodCategory_tb WHERE foodCategoryCode=?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,foodCategoryCode);
			rowNum=pstmt.executeUpdate();
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return rowNum;
	}
	
	public int deleteFoodCode(int foodCode) {
		int rowNum=0;
		PreparedStatement pstmt=null;
		try
		{
			String sql="DELETE FROM foodCategory_tb WHERE foodCode=?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,foodCode);
			rowNum=pstmt.executeUpdate();
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return rowNum;
	}
	
	public int deleteSecondCategoryCode(int secondCategoryCode) {
		int rowNum=0;
		PreparedStatement pstmt=null;
		try
		{
			String sql="DELETE FROM foodCategory_tb WHERE secondCategoryCode=?";
			pstmt=conn.prepareStatement(sql);
			pstmt.setInt(1,secondCategoryCode);
			rowNum=pstmt.executeUpdate();
		}
		catch (SQLException se)
		{
			System.out.println(se.getMessage());
		}
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		finally
		{
			try
			{
				if(pstmt!=null)
					pstmt.close();
			}
			catch (SQLException se)
			{
				System.out.println(se.getMessage());
			}
		}
		return rowNum;
	}
}
